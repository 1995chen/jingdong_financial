[project]
requires-python = ">=3.11"
readme = "README.md"
name = "jingdong_financial"
version = "0.1.0"
description = "micro service framework template project"

[project.urls]
repository = "https://github.com/1995chen/jingdong_financial"

# code format: https://github.com/psf/black/blob/main/pyproject.toml
[tool.black]
line-length = 100

# removing unused import statements
[tool.pycln]
all = true
exclude = "scripts"

# dependency sort
[tool.isort]
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pylint: https://github.com/PyCQA/pylint/blob/main/pylintrc
[tool.pylint.main]
ignore-paths = [
    "docker/",
    "tests/",
    "scripts/",
    "grpc_server/handlers/",
]
extension-pkg-allow-list = "pydantic,orjson"

[tool.pylint.similarities]
# Minimum lines number of a similarity.
min-similarity-lines = 6

[tool.pylint.messages_control]
disable = [
    "fixme",
    "too-few-public-methods",
    "too-many-public-methods",
    "invalid-name",
    "logging-fstring-interpolation",
    "unnecessary-lambda",
]

[tool.pylint.design]
max-returns = 8
max-attributes = 20
max-args = 15
max-locals = 30

[tool.pylint.format]
indent-string = '    '
# Maximum number of characters on a single line.
max-line-length = 100
ignore-long-lines = '^\s*(# )?<?https?://\S+>?$'

# mypy
[tool.mypy]
python_version = '3.11'
plugins = [
    "pydantic.mypy"
]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = 'silent'
no_implicit_reexport = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
exclude = [
    'docker',
    'scripts',
    'tests',
    'protos',
]

[[tool.mypy.overrides]]
module = [
    "sqlalchemy.*",
    "fastapi.*",
    "starlette.*",
    "celery.*",
    "click",
    "uvicorn",
    "dacite.*",
    "dynaconf",
    "inject",
    "kombu.*",
    "pytest.*",
    "orjson.*",
    "redis.*",
    "jwt.*",
    "pydantic.*",
    "numpy.*",
    "requests.*",
    "anyio.*",
    "asyncer.*",
    "psutil.*",
    "Cython.*",
    "redis_lock.*",
    "setuptools.*",
    "itunespy.*",
    "musicbrainzngs.*",
    "spotipy.*",
    "work_wechat.*",
    "ffmpeg.*",
    "yt_dlp.*",
    "downloader_cli.*",
    "mutagen.*",
    "opencc.*",
    "synology_api.*",
    "ytmusicapi.*",
    "pymannkendall.*",
]
ignore_missing_imports = true
implicit_reexport = true

[[tool.mypy.overrides]]
module = [
    "grpc_server.handlers.*",
]
allow_subclassing_any = true
allow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "grpc_server.handlers.*",
]
ignore_errors = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

# pytest, doc: https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "7.1"
# xml report path
addopts = "-ra -q --cov-report xml "
testpaths = [
    "tests",
]
norecursedirs = [
    "scripts/*",
]

# coverage doc: https://coverage.readthedocs.io/en/coverage-5.0.4/config.html#report
[tool.coverage.paths]
source = [
    "app",
    "*/site-packages",
]

[tool.coverage.run]
branch = true
source = [
    "infra",
    "api_server",
    "celery_tasks",
]

[tool.coverage.html]
directory = 'htmlcov'

[tool.coverage.xml]
output = 'htmlcov/coverage.xml'

[tool.coverage.report]
include = [
    "infra/*",
    "api_server/*",
    "celery_tasks/*",
]
# coverage
fail_under = 40
